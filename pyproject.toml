[tool.poetry]
name = "standard-structlog"
version = "0.1.0"
description = ""
authors = ["Fabien MARTY <fabien.marty@gmail.com>"]
license = "MIT"
readme = "README.md"
packages = [{include = "stlog"}]

[tool.poetry.dependencies]
python = "^3.7"

[tool.poetry.group.dev.dependencies]
ruff = "^0.0.247"
mypy = "^1.0.1"
black = "^23.1.0"
poethepoet = "^0.18.1"
pdoc3 = "^0.10.0"
mkdocs-material = "^9.0.13"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
# Enable Pyflakes `E` and `F` codes by default.
select = ["E", "F", "W", "N", "UP", "B", "I", "PL", "RUF"]
ignore = [
    "E501",   # We ignore "Line too long" errors
              # (because we consider that black is enough)
]
line-length = 88
target-version = "py37"

[tool.ruff.isort]
required-imports = ["from __future__ import annotations"]

[tool.poe.tasks]
lint_ruff   = "ruff ."
reformat_ruff   = "ruff --fix ."
lint_black = "black ."
reformat_black = "black ."
lint_mypy = "mypy --check-untyped-defs ."
lint = ["lint_black", "lint_ruff", "lint_mypy"]
reformat = ["reformat_black", "reformat_ruff"]
_clean_api_doc = "rm -Rf api"
_make_api_doc = "pdoc3 --html --output-dir=api stlog"
make_api_doc = ["_clean_api_doc", "_make_api_doc"]
make_doc = ["make_api_doc"]
clean = ["_clean_api_doc"]